rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isSuperAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.basicInfo.userType == 'super_admin';
    }
    
    function isCreatingOwnProfile(userId) {
       return isOwner(userId) && !exists(/databases/$(database)/documents/users/$(userId));
    }

    // Users Collection
    // - Anyone can create their own user document upon sign up.
    // - Users can only read or update their own profile.
    // - Super Admins can read any user profile.
    match /users/{userId} {
      allow read: if isOwner(userId) || isSuperAdmin();
      allow create: if isCreatingOwnProfile(userId);
      allow update: if isOwner(userId);
      allow delete: if false; // Nobody can delete user profiles for now
    }

    // Events Collection
    // - Anyone can read 'approved' events.
    // - Authenticated users can create new events (which default to 'pending' status).
    // - Organizers can update their own events.
    // - Admins can read or update any event.
    match /events/{eventId} {
      allow read: if resource.data.status == 'approved' || isOwner(resource.data.organizerId) || isSuperAdmin();
      allow create: if isSignedIn() && request.resource.data.organizerId == request.auth.uid;
      allow update: if isOwner(resource.data.organizerId) || isSuperAdmin();
      
      // Ticket Tiers Subcollection
      match /ticketTiers/{tierId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/events/$(eventId)).data.organizerId) || isSuperAdmin();
      }
    }
    
    // Tickets Collection
    // - Users can only read their own tickets.
    // - Users can only create tickets for themselves.
    match /tickets/{ticketId} {
        allow read, write: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    // Transactions Collection
    // - Users can only read their own transactions.
    // - Users can only create transactions for themselves.
     match /transactions/{transactionId} {
        allow read, write: if isSignedIn() && request.resource.data.userId == request.auth.uid;
        allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }
  }
}
