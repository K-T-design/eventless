
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      // Prevent users from changing their own userType after creation
      allow update: if request.auth.uid == userId && request.resource.data.basicInfo.userType == resource.data.basicInfo.userType;
    }
    
    match /events/{eventId} {
      allow read: if true;
      // Ensure the organizerId on a new event matches the creator's UID
      allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.organizerId;
      // TODO: Add update rule to check organizerId
    }

    match /events/{eventId}/ticketTiers/{tierId} {
      allow read: if true;
      allow list: if true;
    }

    match /tickets/{ticketId} {
      // Allow reading a single ticket if you are the owner
      allow get: if request.auth.uid == resource.data.userId;
      
      // Allow listing tickets ONLY if the query filters by the user's own UID
      allow list: if request.auth.uid != null && request.query.where.userId == request.auth.uid;

      // Allow creating a ticket if the userId on the ticket matches your own UID
      allow create: if request.auth.uid == request.resource.data.userId;

      // Allow updating a ticket (e.g. for check-in)
      // TODO: Restrict this to event organizers
      allow update: if request.auth.uid != null;
    }

    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
