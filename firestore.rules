rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin roles
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.basicInfo.userType == 'admin';
    }

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.basicInfo.userType == 'super_admin';
    }

    // USERS
    // Only the user or a super_admin can read/write their own profile.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isSuperAdmin();
    }

    // EVENTS
    // Anyone can read approved events.
    // Admins/Super Admins can write any event.
    // Authenticated users can create events.
    match /events/{eventId} {
      allow read: if resource.data.status == 'approved';
      allow get: if request.auth != null; // Allow logged-in users to get any event by ID
      allow list: if true; // Allow anyone to list events (queries will be filtered by status on client)
      allow create: if request.auth != null;
      allow update, delete: if isAdmin() || isSuperAdmin() || request.auth.uid == resource.data.organizerId;
      
      // TICKET TIERS (subcollection)
      match /ticketTiers/{tierId} {
        allow read: if true;
        allow write: if isAdmin() || isSuperAdmin() || request.auth.uid == get(/databases/$(database)/documents/events/$(eventId)).data.organizerId;
      }
    }
    
    // TICKETS
    // Users can only read their own tickets.
    // Tickets can only be created by authenticated users (via server action).
    match /tickets/{ticketId} {
      allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
      allow create: if request.auth != null;
      allow update: if isAdmin() || isSuperAdmin(); // for check-in
      allow delete: if isSuperAdmin();
    }
    
    // TRANSACTIONS
    // Users can only read their own transactions. Creation is server-side.
    match /transactions/{transactionId} {
        allow read: if request.auth.uid == resource.data.userId || isSuperAdmin();
        allow create: if request.auth != null; // Server-side creation
        allow update, delete: if isSuperAdmin();
    }
    
    // PAYOUTS
    // Only Super Admins can read or write payout records.
    match /payouts/{payoutId} {
        allow read, write: if isSuperAdmin();
    }
    
    // SUPPORT TICKETS
    // Users can create tickets. Only Super Admins can read/update them.
    match /supportTickets/{ticketId} {
        allow create: if request.auth != null;
        allow read, update, delete: if isSuperAdmin();
    }
  }
}
