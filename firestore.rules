
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own profile, but cannot change their userType.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Events can be read by anyone, but only created/updated by authenticated users.
    // Further rules would be needed to restrict updates to the event organizer.
    match /events/{eventId} {
      allow read;
      allow write: if request.auth != null;
      
      // Ticket tiers are part of an event, readable by anyone.
      match /ticketTiers/{tierId} {
        allow read;
        allow write: if request.auth != null;
      }
    }
    
    // Users can only read and create their own tickets.
    // The create rule allows our server action (authenticated as a user) to create tickets.
    // The read rule allows a user to query for tickets where their UID matches the userId field.
    match /tickets/{ticketId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // Transactions should be write-only for users, handled by server-side logic.
    match /transactions/{transactionId} {
        allow create: if request.auth != null;
        // Generally, users should not be able to read all transactions.
        allow read, update, delete: if false;
    }
  }
}
