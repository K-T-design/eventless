
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny: No one can read or write by default.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users: Can read their own profile, but not others'. Cannot write to their own profile after creation (must be done by server).
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Events: Anyone can read approved events. Organizers can create events (server will set status to 'pending').
    match /events/{eventId} {
      allow read: if resource.data.status == 'approved';
      allow create: if request.auth != null;
      // Organizers/Admins should update events through server actions, not direct client writes.
    }
    
    // Ticket Tiers: Publicly readable if the event is approved.
    match /events/{eventId}/ticketTiers/{tierId} {
        allow read: if get(/databases/$(database)/documents/events/$(eventId)).data.status == 'approved';
    }
    
    // Tickets: Users can only read their own tickets. Tickets are created server-side.
    match /tickets/{ticketId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      // Tickets should only be created via server-side logic after payment verification.
    }
    
    // Transactions: Cannot be read from the client. Server-side access only.
    match /transactions/{transactionId} {
      allow read, write: if false;
    }
  }
}
